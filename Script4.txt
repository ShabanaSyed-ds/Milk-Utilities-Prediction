## Script 4

## This file contains code to evaluate the performance
## of the time series regression on California milk production 
## in Training set, Test set and Overall

# Map 1-based optional input ports to variables
cad<- maml.mapInputPort(1) # class: data.frame
# Source the .R file from the zip
source("src/milkutilities-8.R") #Reads a zipped R script

# Ensure the dataTime column is preserved
cad$dateTime <- to.POSIXct(cad$Year, cad$Month.Number)

# Ensure the Milk produciton and ScoredLables are numeric 
cad$Milk.Prod <- as.numeric(cad$Milk.Prod)
cad$ScoredLabels <- as.numeric(cad$ScoredLabels)

# Plot the actual and predicted values of milk production using “ggplot” functions
# Plot non-linear(^3) Seasonal model (added as a layer on raw model) for milk production
library(ggplot2)
plot.milk.line <- function(data){
  ggplot(data, aes(x=dateTime, y=Milk.Prod)) +
    geom_line() +
    geom_line(aes(x=dateTime, y=ScoredLabels), color = "red") +
    xlab("Time") + 
    ylab("CA Milk Production (1M lbs)") +
    ggtitle("Time series plot of CA milk production with\n Seasonal model ^(1,2,3)") +
    theme(text = element_text(size=16))
}
plot.milk.line(cad)

# Residuals = the differences between the actual and the predicted values
# Actual: Milk.Prod, predicted: Forecast (trained data)
library(dplyr)
cad$Resid  <- as.numeric(cad$Milk.Prod - cad$ScoredLabels)

# Make the time series plot of the residuals for Seasonal model
plot.resid.scatter<- function(data){
  ggplot(data, aes(x=dateTime, y=Resid)) + 
  geom_point(shape=1, size=2) +
  xlab("Time") + ylab("Residual (1M lbs)") +
  ggtitle("Residual plot of Seasonal model ^(1,2,3)\nfor CA milk production") +
  theme(text = element_text(size=16))}
plot.resid.scatter(cad)

# Evaluate month to month variation in the residuals with a box plot
# Need to make Month an ordered factor to make this work
cad$Month <- order.month(cad$Month)

plot.resid.box <- function(data){
  ggplot(data, aes(x=factor(Month), y=Resid)) +
    geom_boxplot() +
    xlab("Month") + ylab("Residual (1M lbs)") + 
    ggtitle("Residual plot by Month of Seasonal model ^(1,2,3) \nfor CA milk production ") +
    theme(text = element_text(size=16))
}
plot.resid.box(cad)

# Quantile-quantile normal plot of the residuals
plot.resid.qq <- function(y){
  qqnorm(y, main= "Normal Q-Q plot of\nResiduals of Seasonal model ^(1,2,3)")
  sd.1<-sd(y)
  lines((-3):3,((-3):3)*sd.1,type="l",lwd=2,col="red")
}
plot.resid.qq(cad$Resid)

# Histogram of the residuals
plot.resid.hist <- function(data) {
  ggplot(data, aes(x=Resid)) + 
    geom_histogram(binwidth = 0.02, alpha = 0.5) +
    ggtitle("Histogram of Residuals of Seasonal model ^(1,2,3)") +
    xlab("Linear model residuals") +
    theme(text = element_text(size=16))
}
plot.resid.hist(cad)

## Compute the statistics metrics 
## Compute the MAE, RMSE, CoDet values of the residuals
## for both the overall and evaluation parts of the dataset.
## Overall= Row 1:228, Training = 1:216, Forecast(Test set)= Row 217:228

# MAE (Mean Absolute Error)
mae <- function(x){mean(abs(x))}
# RMSE (Root Mean Square Error)
rmse <- function(x){sqrt(sum(x^2)/length(x))} 
# CoDet (Coefficient of Determination/ R Squared value)
rsq <- function(x, y=cad$Milk.Prod){1-(sum(x^2)/sum((y-mean(y))^2))} 

## Compute MAE, RMSE, RSQ
Metrics <- data.frame( 
 Metrics = c(
   "Mean Absolute Error", "Root Mean Squared Error", "Coef of Determination"),
  Training = c(
    mae(cad$Resid[1:216]), rmse(cad$Resid[1:216]), rsq(cad$Resid[1:216])),
  Test = c(
    mae(cad$Resid[217:228]),rmse(cad$Resid[217:228]), rsq(cad$Resid[217:228])),
  Overall = c(
    mae(cad$Resid), rmse(cad$Resid), rsq(cad$Resid))
  )

str(cad) # Check the result

# Select data.frame to be sent to the output Dataset port
maml.mapOutputPort('Metrics')